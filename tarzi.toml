# =============================================================================
# Tarzi Configuration File
# =============================================================================
# This file contains settings for the tarzi web fetcher and search tool.
# Modify these settings according to your requirements.

# -----------------------------------------------------------------------------
# General Settings
# -----------------------------------------------------------------------------
[general]
# Logging level for the application
# Options: trace, debug, info, warn, error
# log_level = "info"

# Request timeout in seconds
# timeout = 30

# -----------------------------------------------------------------------------
# Web Fetcher Settings
# -----------------------------------------------------------------------------
[fetcher]
# Fetcher mode - how to retrieve web content
# Options: "browser_headless", "browser_headed", "http"
# mode = "browser_headless"

# Output format for fetched content
# Options: "markdown", "html", "text"
# format = "markdown"

# HTTP proxy server (optional)
# Uncomment and configure if you need to use a proxy
# proxy = "http://127.0.0.1:7890"

# Web driver executable
# Options: "chromedriver", "geckodriver"
# web_driver = "geckodriver"

# Optional: Use an external WebDriver endpoint (overrides driver/port logic if set)
# web_driver_url = "http://localhost:4444"  # Example: connect to a remote geckodriver

# -----------------------------------------------------------------------------
# Search Engine Settings
# -----------------------------------------------------------------------------
[search]
# Search mode - how to perform searches
# Options: "webquery" (scrape search results), "apiquery" (use search API)
# mode = "webquery"

# Search engine to use
# Options: "google", "bing", "duckduckgo", "brave", "baidu", "exa", "travily", "google_serper"
# engine = "bing"

# URL pattern for search queries when engine is "custom"
# Use {query} as placeholder for the search term
# query_pattern = "https://example.com/search?q={query}"

# Maximum number of search results to return
# limit = 5

# Auto-switching strategy for multiple API providers
# Options: "smart" (automatically switch using internal policies), "none" (only use search.engine)
# autoswitch = "smart"

# API keys for different search engines
# Required when using apiquery mode with specific search engines

# Brave Search API key
# brave_api_key = "your-brave-api-key"

# DuckDuckGo API key
# duckduckgo_api_key = "your-duckduckgo-api-key"

# Google Serper API key
# google_serper_api_key = "your-google-serper-api-key"

# Exa Search API key
# exa_api_key = "your-exa-api-key"

# Travily API key
# travily_api_key = "your-travily-api-key"
